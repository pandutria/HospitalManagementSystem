#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HospitalManagementSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HospitalManagementSystem")]
	public partial class DataBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdoctor(doctor instance);
    partial void Updatedoctor(doctor instance);
    partial void Deletedoctor(doctor instance);
    partial void Insertdoctor_category(doctor_category instance);
    partial void Updatedoctor_category(doctor_category instance);
    partial void Deletedoctor_category(doctor_category instance);
    partial void Inserticd_11(icd_11 instance);
    partial void Updateicd_11(icd_11 instance);
    partial void Deleteicd_11(icd_11 instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Inserticd_11_doctor_recommendation(icd_11_doctor_recommendation instance);
    partial void Updateicd_11_doctor_recommendation(icd_11_doctor_recommendation instance);
    partial void Deleteicd_11_doctor_recommendation(icd_11_doctor_recommendation instance);
    partial void Inserticd_11_exclusion(icd_11_exclusion instance);
    partial void Updateicd_11_exclusion(icd_11_exclusion instance);
    partial void Deleteicd_11_exclusion(icd_11_exclusion instance);
    partial void Insertmeeting(meeting instance);
    partial void Updatemeeting(meeting instance);
    partial void Deletemeeting(meeting instance);
    partial void Insertpatient(patient instance);
    partial void Updatepatient(patient instance);
    partial void Deletepatient(patient instance);
    partial void Insertpatient_record(patient_record instance);
    partial void Updatepatient_record(patient_record instance);
    partial void Deletepatient_record(patient_record instance);
    partial void Insertpayment(payment instance);
    partial void Updatepayment(payment instance);
    partial void Deletepayment(payment instance);
    partial void Insertpayment_detail(payment_detail instance);
    partial void Updatepayment_detail(payment_detail instance);
    partial void Deletepayment_detail(payment_detail instance);
    #endregion
		
		public DataBaseDataContext() : 
				base(global::HospitalManagementSystem.Properties.Settings.Default.HospitalManagementSystemConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<doctor> doctors
		{
			get
			{
				return this.GetTable<doctor>();
			}
		}
		
		public System.Data.Linq.Table<doctor_category> doctor_categories
		{
			get
			{
				return this.GetTable<doctor_category>();
			}
		}
		
		public System.Data.Linq.Table<icd_11> icd_11s
		{
			get
			{
				return this.GetTable<icd_11>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<icd_11_doctor_recommendation> icd_11_doctor_recommendations
		{
			get
			{
				return this.GetTable<icd_11_doctor_recommendation>();
			}
		}
		
		public System.Data.Linq.Table<icd_11_exclusion> icd_11_exclusions
		{
			get
			{
				return this.GetTable<icd_11_exclusion>();
			}
		}
		
		public System.Data.Linq.Table<meeting> meetings
		{
			get
			{
				return this.GetTable<meeting>();
			}
		}
		
		public System.Data.Linq.Table<patient> patients
		{
			get
			{
				return this.GetTable<patient>();
			}
		}
		
		public System.Data.Linq.Table<patient_record> patient_records
		{
			get
			{
				return this.GetTable<patient_record>();
			}
		}
		
		public System.Data.Linq.Table<payment> payments
		{
			get
			{
				return this.GetTable<payment>();
			}
		}
		
		public System.Data.Linq.Table<payment_detail> payment_details
		{
			get
			{
				return this.GetTable<payment_detail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctor")]
	public partial class doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _doctor_category_id;
		
		private string _name;
		
		private string _phone_number;
		
		private string _email;
		
		private string _city_of_birth;
		
		private System.DateTime _date_of_birth;
		
		private string _address;
		
		private string _gender;
		
		private string _assigned_room;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<meeting> _meetings;
		
		private EntityRef<doctor_category> _doctor_category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondoctor_category_idChanging(int value);
    partial void Ondoctor_category_idChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Oncity_of_birthChanging(string value);
    partial void Oncity_of_birthChanged();
    partial void Ondate_of_birthChanging(System.DateTime value);
    partial void Ondate_of_birthChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Onassigned_roomChanging(string value);
    partial void Onassigned_roomChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public doctor()
		{
			this._meetings = new EntitySet<meeting>(new Action<meeting>(this.attach_meetings), new Action<meeting>(this.detach_meetings));
			this._doctor_category = default(EntityRef<doctor_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_category_id", DbType="Int NOT NULL")]
		public int doctor_category_id
		{
			get
			{
				return this._doctor_category_id;
			}
			set
			{
				if ((this._doctor_category_id != value))
				{
					if (this._doctor_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_category_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_category_id = value;
					this.SendPropertyChanged("doctor_category_id");
					this.Ondoctor_category_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_of_birth", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string city_of_birth
		{
			get
			{
				return this._city_of_birth;
			}
			set
			{
				if ((this._city_of_birth != value))
				{
					this.Oncity_of_birthChanging(value);
					this.SendPropertyChanging();
					this._city_of_birth = value;
					this.SendPropertyChanged("city_of_birth");
					this.Oncity_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="DateTime NOT NULL")]
		public System.DateTime date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_assigned_room", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string assigned_room
		{
			get
			{
				return this._assigned_room;
			}
			set
			{
				if ((this._assigned_room != value))
				{
					this.Onassigned_roomChanging(value);
					this.SendPropertyChanging();
					this._assigned_room = value;
					this.SendPropertyChanged("assigned_room");
					this.Onassigned_roomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_meeting", Storage="_meetings", ThisKey="id", OtherKey="doctor_id")]
		public EntitySet<meeting> meetings
		{
			get
			{
				return this._meetings;
			}
			set
			{
				this._meetings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_category_doctor", Storage="_doctor_category", ThisKey="doctor_category_id", OtherKey="id", IsForeignKey=true)]
		public doctor_category doctor_category
		{
			get
			{
				return this._doctor_category.Entity;
			}
			set
			{
				doctor_category previousValue = this._doctor_category.Entity;
				if (((previousValue != value) 
							|| (this._doctor_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor_category.Entity = null;
						previousValue.doctors.Remove(this);
					}
					this._doctor_category.Entity = value;
					if ((value != null))
					{
						value.doctors.Add(this);
						this._doctor_category_id = value.id;
					}
					else
					{
						this._doctor_category_id = default(int);
					}
					this.SendPropertyChanged("doctor_category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_meetings(meeting entity)
		{
			this.SendPropertyChanging();
			entity.doctor = this;
		}
		
		private void detach_meetings(meeting entity)
		{
			this.SendPropertyChanging();
			entity.doctor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.doctor_category")]
	public partial class doctor_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _category;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<doctor> _doctors;
		
		private EntitySet<icd_11_doctor_recommendation> _icd_11_doctor_recommendations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncategoryChanging(string value);
    partial void OncategoryChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public doctor_category()
		{
			this._doctors = new EntitySet<doctor>(new Action<doctor>(this.attach_doctors), new Action<doctor>(this.detach_doctors));
			this._icd_11_doctor_recommendations = new EntitySet<icd_11_doctor_recommendation>(new Action<icd_11_doctor_recommendation>(this.attach_icd_11_doctor_recommendations), new Action<icd_11_doctor_recommendation>(this.detach_icd_11_doctor_recommendations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string category
		{
			get
			{
				return this._category;
			}
			set
			{
				if ((this._category != value))
				{
					this.OncategoryChanging(value);
					this.SendPropertyChanging();
					this._category = value;
					this.SendPropertyChanged("category");
					this.OncategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_category_doctor", Storage="_doctors", ThisKey="id", OtherKey="doctor_category_id")]
		public EntitySet<doctor> doctors
		{
			get
			{
				return this._doctors;
			}
			set
			{
				this._doctors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_category_icd_11_doctor_recommendation", Storage="_icd_11_doctor_recommendations", ThisKey="id", OtherKey="doctor_category_id")]
		public EntitySet<icd_11_doctor_recommendation> icd_11_doctor_recommendations
		{
			get
			{
				return this._icd_11_doctor_recommendations;
			}
			set
			{
				this._icd_11_doctor_recommendations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_doctors(doctor entity)
		{
			this.SendPropertyChanging();
			entity.doctor_category = this;
		}
		
		private void detach_doctors(doctor entity)
		{
			this.SendPropertyChanging();
			entity.doctor_category = null;
		}
		
		private void attach_icd_11_doctor_recommendations(icd_11_doctor_recommendation entity)
		{
			this.SendPropertyChanging();
			entity.doctor_category = this;
		}
		
		private void detach_icd_11_doctor_recommendations(icd_11_doctor_recommendation entity)
		{
			this.SendPropertyChanging();
			entity.doctor_category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[icd-11]")]
	public partial class icd_11 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<icd_11_doctor_recommendation> _icd_11_doctor_recommendations;
		
		private EntitySet<icd_11_exclusion> _icd_11_exclusions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public icd_11()
		{
			this._icd_11_doctor_recommendations = new EntitySet<icd_11_doctor_recommendation>(new Action<icd_11_doctor_recommendation>(this.attach_icd_11_doctor_recommendations), new Action<icd_11_doctor_recommendation>(this.detach_icd_11_doctor_recommendations));
			this._icd_11_exclusions = new EntitySet<icd_11_exclusion>(new Action<icd_11_exclusion>(this.attach_icd_11_exclusions), new Action<icd_11_exclusion>(this.detach_icd_11_exclusions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="icd_11_icd_11_doctor_recommendation", Storage="_icd_11_doctor_recommendations", ThisKey="id", OtherKey="icd_11_id")]
		public EntitySet<icd_11_doctor_recommendation> icd_11_doctor_recommendations
		{
			get
			{
				return this._icd_11_doctor_recommendations;
			}
			set
			{
				this._icd_11_doctor_recommendations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="icd_11_icd_11_exclusion", Storage="_icd_11_exclusions", ThisKey="id", OtherKey="icd_11_id")]
		public EntitySet<icd_11_exclusion> icd_11_exclusions
		{
			get
			{
				return this._icd_11_exclusions;
			}
			set
			{
				this._icd_11_exclusions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_icd_11_doctor_recommendations(icd_11_doctor_recommendation entity)
		{
			this.SendPropertyChanging();
			entity.icd_11 = this;
		}
		
		private void detach_icd_11_doctor_recommendations(icd_11_doctor_recommendation entity)
		{
			this.SendPropertyChanging();
			entity.icd_11 = null;
		}
		
		private void attach_icd_11_exclusions(icd_11_exclusion entity)
		{
			this.SendPropertyChanging();
			entity.icd_11 = this;
		}
		
		private void detach_icd_11_exclusions(icd_11_exclusion entity)
		{
			this.SendPropertyChanging();
			entity.icd_11 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private System.DateTime _last_login_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onlast_login_atChanging(System.DateTime value);
    partial void Onlast_login_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="Char(128) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_login_at", DbType="DateTime NOT NULL")]
		public System.DateTime last_login_at
		{
			get
			{
				return this._last_login_at;
			}
			set
			{
				if ((this._last_login_at != value))
				{
					this.Onlast_login_atChanging(value);
					this.SendPropertyChanging();
					this._last_login_at = value;
					this.SendPropertyChanged("last_login_at");
					this.Onlast_login_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[icd-11_doctor_recommendation]")]
	public partial class icd_11_doctor_recommendation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _icd_11_id;
		
		private int _doctor_category_id;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntityRef<doctor_category> _doctor_category;
		
		private EntityRef<icd_11> _icd_11;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onicd_11_idChanging(int value);
    partial void Onicd_11_idChanged();
    partial void Ondoctor_category_idChanging(int value);
    partial void Ondoctor_category_idChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public icd_11_doctor_recommendation()
		{
			this._doctor_category = default(EntityRef<doctor_category>);
			this._icd_11 = default(EntityRef<icd_11>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[icd-11_id]", Storage="_icd_11_id", DbType="Int NOT NULL")]
		public int icd_11_id
		{
			get
			{
				return this._icd_11_id;
			}
			set
			{
				if ((this._icd_11_id != value))
				{
					this.Onicd_11_idChanging(value);
					this.SendPropertyChanging();
					this._icd_11_id = value;
					this.SendPropertyChanged("icd_11_id");
					this.Onicd_11_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_category_id", DbType="Int NOT NULL")]
		public int doctor_category_id
		{
			get
			{
				return this._doctor_category_id;
			}
			set
			{
				if ((this._doctor_category_id != value))
				{
					if (this._doctor_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_category_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_category_id = value;
					this.SendPropertyChanged("doctor_category_id");
					this.Ondoctor_category_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_category_icd_11_doctor_recommendation", Storage="_doctor_category", ThisKey="doctor_category_id", OtherKey="id", IsForeignKey=true)]
		public doctor_category doctor_category
		{
			get
			{
				return this._doctor_category.Entity;
			}
			set
			{
				doctor_category previousValue = this._doctor_category.Entity;
				if (((previousValue != value) 
							|| (this._doctor_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor_category.Entity = null;
						previousValue.icd_11_doctor_recommendations.Remove(this);
					}
					this._doctor_category.Entity = value;
					if ((value != null))
					{
						value.icd_11_doctor_recommendations.Add(this);
						this._doctor_category_id = value.id;
					}
					else
					{
						this._doctor_category_id = default(int);
					}
					this.SendPropertyChanged("doctor_category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="icd_11_icd_11_doctor_recommendation", Storage="_icd_11", ThisKey="icd_11_id", OtherKey="id", IsForeignKey=true)]
		public icd_11 icd_11
		{
			get
			{
				return this._icd_11.Entity;
			}
			set
			{
				icd_11 previousValue = this._icd_11.Entity;
				if (((previousValue != value) 
							|| (this._icd_11.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._icd_11.Entity = null;
						previousValue.icd_11_doctor_recommendations.Remove(this);
					}
					this._icd_11.Entity = value;
					if ((value != null))
					{
						value.icd_11_doctor_recommendations.Add(this);
						this._icd_11_id = value.id;
					}
					else
					{
						this._icd_11_id = default(int);
					}
					this.SendPropertyChanged("icd_11");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[icd-11_exclusion]")]
	public partial class icd_11_exclusion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _icd_11_id;
		
		private string _exclusion;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntityRef<icd_11> _icd_11;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onicd_11_idChanging(int value);
    partial void Onicd_11_idChanged();
    partial void OnexclusionChanging(string value);
    partial void OnexclusionChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public icd_11_exclusion()
		{
			this._icd_11 = default(EntityRef<icd_11>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[icd-11_id]", Storage="_icd_11_id", DbType="Int NOT NULL")]
		public int icd_11_id
		{
			get
			{
				return this._icd_11_id;
			}
			set
			{
				if ((this._icd_11_id != value))
				{
					this.Onicd_11_idChanging(value);
					this.SendPropertyChanging();
					this._icd_11_id = value;
					this.SendPropertyChanged("icd_11_id");
					this.Onicd_11_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exclusion", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string exclusion
		{
			get
			{
				return this._exclusion;
			}
			set
			{
				if ((this._exclusion != value))
				{
					this.OnexclusionChanging(value);
					this.SendPropertyChanging();
					this._exclusion = value;
					this.SendPropertyChanged("exclusion");
					this.OnexclusionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="icd_11_icd_11_exclusion", Storage="_icd_11", ThisKey="icd_11_id", OtherKey="id", IsForeignKey=true)]
		public icd_11 icd_11
		{
			get
			{
				return this._icd_11.Entity;
			}
			set
			{
				icd_11 previousValue = this._icd_11.Entity;
				if (((previousValue != value) 
							|| (this._icd_11.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._icd_11.Entity = null;
						previousValue.icd_11_exclusions.Remove(this);
					}
					this._icd_11.Entity = value;
					if ((value != null))
					{
						value.icd_11_exclusions.Add(this);
						this._icd_11_id = value.id;
					}
					else
					{
						this._icd_11_id = default(int);
					}
					this.SendPropertyChanged("icd_11");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.meeting")]
	public partial class meeting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _patient_id;
		
		private int _doctor_id;
		
		private string _room;
		
		private System.DateTime _date;
		
		private int _queue_number;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<patient_record> _patient_records;
		
		private EntitySet<payment> _payments;
		
		private EntityRef<doctor> _doctor;
		
		private EntityRef<patient> _patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void Ondoctor_idChanging(int value);
    partial void Ondoctor_idChanged();
    partial void OnroomChanging(string value);
    partial void OnroomChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Onqueue_numberChanging(int value);
    partial void Onqueue_numberChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public meeting()
		{
			this._patient_records = new EntitySet<patient_record>(new Action<patient_record>(this.attach_patient_records), new Action<patient_record>(this.detach_patient_records));
			this._payments = new EntitySet<payment>(new Action<payment>(this.attach_payments), new Action<payment>(this.detach_payments));
			this._doctor = default(EntityRef<doctor>);
			this._patient = default(EntityRef<patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int NOT NULL")]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_doctor_id", DbType="Int NOT NULL")]
		public int doctor_id
		{
			get
			{
				return this._doctor_id;
			}
			set
			{
				if ((this._doctor_id != value))
				{
					if (this._doctor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondoctor_idChanging(value);
					this.SendPropertyChanging();
					this._doctor_id = value;
					this.SendPropertyChanged("doctor_id");
					this.Ondoctor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_room", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string room
		{
			get
			{
				return this._room;
			}
			set
			{
				if ((this._room != value))
				{
					this.OnroomChanging(value);
					this.SendPropertyChanging();
					this._room = value;
					this.SendPropertyChanged("room");
					this.OnroomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_queue_number", DbType="Int NOT NULL")]
		public int queue_number
		{
			get
			{
				return this._queue_number;
			}
			set
			{
				if ((this._queue_number != value))
				{
					this.Onqueue_numberChanging(value);
					this.SendPropertyChanging();
					this._queue_number = value;
					this.SendPropertyChanged("queue_number");
					this.Onqueue_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="meeting_patient_record", Storage="_patient_records", ThisKey="id", OtherKey="meeting_id")]
		public EntitySet<patient_record> patient_records
		{
			get
			{
				return this._patient_records;
			}
			set
			{
				this._patient_records.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="meeting_payment", Storage="_payments", ThisKey="id", OtherKey="meeting_id")]
		public EntitySet<payment> payments
		{
			get
			{
				return this._payments;
			}
			set
			{
				this._payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="doctor_meeting", Storage="_doctor", ThisKey="doctor_id", OtherKey="id", IsForeignKey=true)]
		public doctor doctor
		{
			get
			{
				return this._doctor.Entity;
			}
			set
			{
				doctor previousValue = this._doctor.Entity;
				if (((previousValue != value) 
							|| (this._doctor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._doctor.Entity = null;
						previousValue.meetings.Remove(this);
					}
					this._doctor.Entity = value;
					if ((value != null))
					{
						value.meetings.Add(this);
						this._doctor_id = value.id;
					}
					else
					{
						this._doctor_id = default(int);
					}
					this.SendPropertyChanged("doctor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_meeting", Storage="_patient", ThisKey="patient_id", OtherKey="id", IsForeignKey=true)]
		public patient patient
		{
			get
			{
				return this._patient.Entity;
			}
			set
			{
				patient previousValue = this._patient.Entity;
				if (((previousValue != value) 
							|| (this._patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._patient.Entity = null;
						previousValue.meetings.Remove(this);
					}
					this._patient.Entity = value;
					if ((value != null))
					{
						value.meetings.Add(this);
						this._patient_id = value.id;
					}
					else
					{
						this._patient_id = default(int);
					}
					this.SendPropertyChanged("patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_patient_records(patient_record entity)
		{
			this.SendPropertyChanging();
			entity.meeting = this;
		}
		
		private void detach_patient_records(patient_record entity)
		{
			this.SendPropertyChanging();
			entity.meeting = null;
		}
		
		private void attach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.meeting = this;
		}
		
		private void detach_payments(payment entity)
		{
			this.SendPropertyChanging();
			entity.meeting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.patient")]
	public partial class patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _phone_number;
		
		private string _email;
		
		private string _city_of_birth;
		
		private System.DateTime _date_of_birth;
		
		private string _address;
		
		private string _gender;
		
		private string _blood_type;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<meeting> _meetings;
		
		private EntitySet<patient_record> _patient_records;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Oncity_of_birthChanging(string value);
    partial void Oncity_of_birthChanged();
    partial void Ondate_of_birthChanging(System.DateTime value);
    partial void Ondate_of_birthChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OngenderChanging(string value);
    partial void OngenderChanged();
    partial void Onblood_typeChanging(string value);
    partial void Onblood_typeChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public patient()
		{
			this._meetings = new EntitySet<meeting>(new Action<meeting>(this.attach_meetings), new Action<meeting>(this.detach_meetings));
			this._patient_records = new EntitySet<patient_record>(new Action<patient_record>(this.attach_patient_records), new Action<patient_record>(this.detach_patient_records));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_of_birth", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string city_of_birth
		{
			get
			{
				return this._city_of_birth;
			}
			set
			{
				if ((this._city_of_birth != value))
				{
					this.Oncity_of_birthChanging(value);
					this.SendPropertyChanging();
					this._city_of_birth = value;
					this.SendPropertyChanged("city_of_birth");
					this.Oncity_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="DateTime NOT NULL")]
		public System.DateTime date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string gender
		{
			get
			{
				return this._gender;
			}
			set
			{
				if ((this._gender != value))
				{
					this.OngenderChanging(value);
					this.SendPropertyChanging();
					this._gender = value;
					this.SendPropertyChanged("gender");
					this.OngenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blood_type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string blood_type
		{
			get
			{
				return this._blood_type;
			}
			set
			{
				if ((this._blood_type != value))
				{
					this.Onblood_typeChanging(value);
					this.SendPropertyChanging();
					this._blood_type = value;
					this.SendPropertyChanged("blood_type");
					this.Onblood_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_meeting", Storage="_meetings", ThisKey="id", OtherKey="patient_id")]
		public EntitySet<meeting> meetings
		{
			get
			{
				return this._meetings;
			}
			set
			{
				this._meetings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_patient_record", Storage="_patient_records", ThisKey="id", OtherKey="patient_id")]
		public EntitySet<patient_record> patient_records
		{
			get
			{
				return this._patient_records;
			}
			set
			{
				this._patient_records.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_meetings(meeting entity)
		{
			this.SendPropertyChanging();
			entity.patient = this;
		}
		
		private void detach_meetings(meeting entity)
		{
			this.SendPropertyChanging();
			entity.patient = null;
		}
		
		private void attach_patient_records(patient_record entity)
		{
			this.SendPropertyChanging();
			entity.patient = this;
		}
		
		private void detach_patient_records(patient_record entity)
		{
			this.SendPropertyChanging();
			entity.patient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.patient_record")]
	public partial class patient_record : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _patient_id;
		
		private int _meeting_id;
		
		private string _notes;
		
		private System.DateTime _date;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntityRef<meeting> _meeting;
		
		private EntityRef<patient> _patient;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpatient_idChanging(int value);
    partial void Onpatient_idChanged();
    partial void Onmeeting_idChanging(int value);
    partial void Onmeeting_idChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public patient_record()
		{
			this._meeting = default(EntityRef<meeting>);
			this._patient = default(EntityRef<patient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patient_id", DbType="Int NOT NULL")]
		public int patient_id
		{
			get
			{
				return this._patient_id;
			}
			set
			{
				if ((this._patient_id != value))
				{
					if (this._patient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpatient_idChanging(value);
					this.SendPropertyChanging();
					this._patient_id = value;
					this.SendPropertyChanged("patient_id");
					this.Onpatient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meeting_id", DbType="Int NOT NULL")]
		public int meeting_id
		{
			get
			{
				return this._meeting_id;
			}
			set
			{
				if ((this._meeting_id != value))
				{
					if (this._meeting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmeeting_idChanging(value);
					this.SendPropertyChanging();
					this._meeting_id = value;
					this.SendPropertyChanged("meeting_id");
					this.Onmeeting_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="meeting_patient_record", Storage="_meeting", ThisKey="meeting_id", OtherKey="id", IsForeignKey=true)]
		public meeting meeting
		{
			get
			{
				return this._meeting.Entity;
			}
			set
			{
				meeting previousValue = this._meeting.Entity;
				if (((previousValue != value) 
							|| (this._meeting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._meeting.Entity = null;
						previousValue.patient_records.Remove(this);
					}
					this._meeting.Entity = value;
					if ((value != null))
					{
						value.patient_records.Add(this);
						this._meeting_id = value.id;
					}
					else
					{
						this._meeting_id = default(int);
					}
					this.SendPropertyChanged("meeting");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="patient_patient_record", Storage="_patient", ThisKey="patient_id", OtherKey="id", IsForeignKey=true)]
		public patient patient
		{
			get
			{
				return this._patient.Entity;
			}
			set
			{
				patient previousValue = this._patient.Entity;
				if (((previousValue != value) 
							|| (this._patient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._patient.Entity = null;
						previousValue.patient_records.Remove(this);
					}
					this._patient.Entity = value;
					if ((value != null))
					{
						value.patient_records.Add(this);
						this._patient_id = value.id;
					}
					else
					{
						this._patient_id = default(int);
					}
					this.SendPropertyChanged("patient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payment")]
	public partial class payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _meeting_id;
		
		private string _card_holder_name;
		
		private string _primary_account_number;
		
		private System.DateTime _expiration_date;
		
		private int _service_code;
		
		private decimal _total_payment;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntitySet<payment_detail> _payment_details;
		
		private EntityRef<meeting> _meeting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onmeeting_idChanging(int value);
    partial void Onmeeting_idChanged();
    partial void Oncard_holder_nameChanging(string value);
    partial void Oncard_holder_nameChanged();
    partial void Onprimary_account_numberChanging(string value);
    partial void Onprimary_account_numberChanged();
    partial void Onexpiration_dateChanging(System.DateTime value);
    partial void Onexpiration_dateChanged();
    partial void Onservice_codeChanging(int value);
    partial void Onservice_codeChanged();
    partial void Ontotal_paymentChanging(decimal value);
    partial void Ontotal_paymentChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public payment()
		{
			this._payment_details = new EntitySet<payment_detail>(new Action<payment_detail>(this.attach_payment_details), new Action<payment_detail>(this.detach_payment_details));
			this._meeting = default(EntityRef<meeting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meeting_id", DbType="Int NOT NULL")]
		public int meeting_id
		{
			get
			{
				return this._meeting_id;
			}
			set
			{
				if ((this._meeting_id != value))
				{
					if (this._meeting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmeeting_idChanging(value);
					this.SendPropertyChanging();
					this._meeting_id = value;
					this.SendPropertyChanged("meeting_id");
					this.Onmeeting_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_card_holder_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string card_holder_name
		{
			get
			{
				return this._card_holder_name;
			}
			set
			{
				if ((this._card_holder_name != value))
				{
					this.Oncard_holder_nameChanging(value);
					this.SendPropertyChanging();
					this._card_holder_name = value;
					this.SendPropertyChanged("card_holder_name");
					this.Oncard_holder_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primary_account_number", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string primary_account_number
		{
			get
			{
				return this._primary_account_number;
			}
			set
			{
				if ((this._primary_account_number != value))
				{
					this.Onprimary_account_numberChanging(value);
					this.SendPropertyChanging();
					this._primary_account_number = value;
					this.SendPropertyChanged("primary_account_number");
					this.Onprimary_account_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiration_date", DbType="Date NOT NULL")]
		public System.DateTime expiration_date
		{
			get
			{
				return this._expiration_date;
			}
			set
			{
				if ((this._expiration_date != value))
				{
					this.Onexpiration_dateChanging(value);
					this.SendPropertyChanging();
					this._expiration_date = value;
					this.SendPropertyChanged("expiration_date");
					this.Onexpiration_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_service_code", DbType="Int NOT NULL")]
		public int service_code
		{
			get
			{
				return this._service_code;
			}
			set
			{
				if ((this._service_code != value))
				{
					this.Onservice_codeChanging(value);
					this.SendPropertyChanging();
					this._service_code = value;
					this.SendPropertyChanged("service_code");
					this.Onservice_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_payment", DbType="Decimal(10,2) NOT NULL")]
		public decimal total_payment
		{
			get
			{
				return this._total_payment;
			}
			set
			{
				if ((this._total_payment != value))
				{
					this.Ontotal_paymentChanging(value);
					this.SendPropertyChanging();
					this._total_payment = value;
					this.SendPropertyChanged("total_payment");
					this.Ontotal_paymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_payment_detail", Storage="_payment_details", ThisKey="id", OtherKey="payment_id")]
		public EntitySet<payment_detail> payment_details
		{
			get
			{
				return this._payment_details;
			}
			set
			{
				this._payment_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="meeting_payment", Storage="_meeting", ThisKey="meeting_id", OtherKey="id", IsForeignKey=true)]
		public meeting meeting
		{
			get
			{
				return this._meeting.Entity;
			}
			set
			{
				meeting previousValue = this._meeting.Entity;
				if (((previousValue != value) 
							|| (this._meeting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._meeting.Entity = null;
						previousValue.payments.Remove(this);
					}
					this._meeting.Entity = value;
					if ((value != null))
					{
						value.payments.Add(this);
						this._meeting_id = value.id;
					}
					else
					{
						this._meeting_id = default(int);
					}
					this.SendPropertyChanged("meeting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_payment_details(payment_detail entity)
		{
			this.SendPropertyChanging();
			entity.payment = this;
		}
		
		private void detach_payment_details(payment_detail entity)
		{
			this.SendPropertyChanging();
			entity.payment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payment_detail")]
	public partial class payment_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _payment_id;
		
		private string _item;
		
		private decimal _nominal;
		
		private string _notes;
		
		private System.DateTime _created_at;
		
		private System.Nullable<System.DateTime> _last_updated_at;
		
		private System.Nullable<System.DateTime> _deleted_at;
		
		private EntityRef<payment> _payment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpayment_idChanging(int value);
    partial void Onpayment_idChanged();
    partial void OnitemChanging(string value);
    partial void OnitemChanged();
    partial void OnnominalChanging(decimal value);
    partial void OnnominalChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void Oncreated_atChanging(System.DateTime value);
    partial void Oncreated_atChanged();
    partial void Onlast_updated_atChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_updated_atChanged();
    partial void Ondeleted_atChanging(System.Nullable<System.DateTime> value);
    partial void Ondeleted_atChanged();
    #endregion
		
		public payment_detail()
		{
			this._payment = default(EntityRef<payment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", DbType="Int NOT NULL")]
		public int payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					if (this._payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_item", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string item
		{
			get
			{
				return this._item;
			}
			set
			{
				if ((this._item != value))
				{
					this.OnitemChanging(value);
					this.SendPropertyChanging();
					this._item = value;
					this.SendPropertyChanged("item");
					this.OnitemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nominal", DbType="Decimal(10,2) NOT NULL")]
		public decimal nominal
		{
			get
			{
				return this._nominal;
			}
			set
			{
				if ((this._nominal != value))
				{
					this.OnnominalChanging(value);
					this.SendPropertyChanging();
					this._nominal = value;
					this.SendPropertyChanged("nominal");
					this.OnnominalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created_at", DbType="DateTime NOT NULL")]
		public System.DateTime created_at
		{
			get
			{
				return this._created_at;
			}
			set
			{
				if ((this._created_at != value))
				{
					this.Oncreated_atChanging(value);
					this.SendPropertyChanging();
					this._created_at = value;
					this.SendPropertyChanged("created_at");
					this.Oncreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_updated_at
		{
			get
			{
				return this._last_updated_at;
			}
			set
			{
				if ((this._last_updated_at != value))
				{
					this.Onlast_updated_atChanging(value);
					this.SendPropertyChanging();
					this._last_updated_at = value;
					this.SendPropertyChanged("last_updated_at");
					this.Onlast_updated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deleted_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> deleted_at
		{
			get
			{
				return this._deleted_at;
			}
			set
			{
				if ((this._deleted_at != value))
				{
					this.Ondeleted_atChanging(value);
					this.SendPropertyChanging();
					this._deleted_at = value;
					this.SendPropertyChanged("deleted_at");
					this.Ondeleted_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_payment_detail", Storage="_payment", ThisKey="payment_id", OtherKey="id", IsForeignKey=true)]
		public payment payment
		{
			get
			{
				return this._payment.Entity;
			}
			set
			{
				payment previousValue = this._payment.Entity;
				if (((previousValue != value) 
							|| (this._payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._payment.Entity = null;
						previousValue.payment_details.Remove(this);
					}
					this._payment.Entity = value;
					if ((value != null))
					{
						value.payment_details.Add(this);
						this._payment_id = value.id;
					}
					else
					{
						this._payment_id = default(int);
					}
					this.SendPropertyChanged("payment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
